Lesson21 Operators, Object (add Operators to intro2)
#### Operator priority ####
@ task21.task2101  /* 29%, 1, 1,66, 7955 */ (for String representation used old solution)
- task21.task2102; /* 27%, 1, 1.51, 7670 */ (remembered from last year)
- task21.task2103; /* 55%, 1, 2.59, 7882 */

#### equals() && hashCode() learn by heart a little bit ####
# task21.task2104; /* 82%, 1, 1.59, 7758 */ (Java7+ including null successes)
* task21.task2105; /* 33%, 2, 2.56, 7715 */ (IntelliJ Standard & using null checking accepted)
(tried automatic generation with Java7+ failed, maybe because of include not null-fields)
# task21.task2106; /* 48%, 1, 2.38, 7435 */ (IntelliJ Standard & using null checking accepted)
#### cloning ####
# task21.task2109; #### started ####
#### try-with-resources(java7) ####
* task21.task2110; /* 10%, 2, 1.48, 7482 */ (Validator bug. Finally was outcommented)
(В методе writeZipEntriesToFile должен отсутствовать блок finally.)
@ task21.task2111; /*  54%, 1, 2.25, 7296 */
@ task21.task2112; /*  48%, 1, 2.52, 6914 */ (easy)

#### BigTask Hippodrome task21.task2113; #### (finished)
- (1)  /* 13%, 1, 1.24, 7975 */
- (2)  /* 17%, 1, 1.37, 7893 */
- (3)  /* 23%, 1, 1.65, 7839 */
- (4)  /* 15%, 1, 1.25, 7803 */
- (5)  /* 24%, 1, 1.48, 7805 */
# (6)  /* 48%, 1, 2.87, 7756 */
- (7)  /* 7%,  1, 1.14, 7719 */
- (8)  /* 29%, 1, 2.25, 7716 */
- (9)  /* 41%, 1, 2.27, 7707 */
- (10) /* 13%, 1, 1.26, 7667 */
- (11) /* 23%, 1, 2.0,  7675 */
- (12) /* 21%, 1, 1.43, 7643 */
# (13) /* 32%, 1, 1.72, 7634 */
- (14) /* 1%,  1, 1.01, 7613 */
# (15) /* 32%, 2, 2.76, 7564 */ (Did winner instead of winner.getName(). NO RUSH!)
(Метод printWinner должен выводить на экран имя победителя на экран в формате заданном в условии задачи.)
- (16) /* 4%,  1, 1.13, 7493 */ (#### Task finished ####)

Lesson22 Strings


* task22.task2103; /* 10%, 5, 2.62, 7103 */ (Validator didn't accept my solution even though it works, used avedensky)
(Проверь, что getPartOfString работает правильно если переданная строка null.)
if (index1 == -1 || index2 == -1 || string == null || string.isEmpty()) {
    throw new TooShortStringException();  // didn't accepted by validator
}
#### String.format #### (See DOCS, Formatter)
- task22.task2204; /* 25%, 2, 2.14, 7186 */ (MUST USE %n. BETTER READ THEORY!)
(Для перевода строки не должно быть использовано выражение \n.)
- task22.task2205; /* 16%, 1, 1.25, 7188 */
- task22.task2206; /* 29%, 1, 1.53, 7129 */

#### BigTask Snake task23.task2312; #### study task structure (finished)
- (1)  /* 7%,  1, 1.11, 6820 */
- (2)  /* 15%, 1, 1.22, 6791 */
- (3)  /* 11%, 1, 1.16, 6773 */ study KeyboardObserver
- (4)  /* 20%, 1, 1.33, 6759 */
- (5)  /* 8%,  1, 1.11, 6751 */ enum
- (6)  /* 13%, 1, 1.18, 6752 */
# (7)  /* 36%, 1, 2.02, 6725 */ public isAlive() { return isAlive; } // getter for boolean
- (8)  /* 33%, 1, 1.8,  6662 */ Snake constructor
- (9)  /* 28%, 1, 1.53, 6650 */ Room constructor
- (10) /* 69%, 1, 2.89, 6663 */ initialize main() (Why many failed?)
- (11) /* 65%, 1, 2.99, 6633 */ createMouse() (Why many failed?)
- (12) /* 40%, 1, 2.1,  6597 */
* (13) /* 11%, 5, 2.27, 6537 */ (Logical mistake to use for circle.)
(already 3 fails. Not clear between i > 11 & i < 16)(Метод sleep должен вызывать метод Thread.sleep(200) для уровней больше 15.)
/*for (int i = 1; i <= getSnake().getSections().size(); i++) {
    if (i > 1 && i <= 15) {
        Thread.sleep(500 - 20 * (i - 1));
    } else {
        Thread.sleep(200);
    }
}*/
# (14) /* 58%, 1, 3.66, 6403 */ (used avedensky solution. Idea understood, just needed time to do and to test)
- (15) /* 30%, 1, 1.96, 6329 */
* (16) /* 50%, 2, 3.66 ,6089 */ (own equals() & hashCode(). (Didn't know exactly x, y coordinates of Room. <0 also needed)
(1 attempt checkBorders failed)
public void checkBorders(SnakeSection head) {
    if (head.getX() > Room.game.getWidth() || head.getY() > Room.game.getHeight()) {
        isAlive = false;
    }
}
* (17) /* 16%, 6, 3.71, 5912 */ (Had mistaken logic. See what I commented out. Study. Read froum)
3) 4) 5) failed; after removing if(isAlive) 1) 2) also failed. Validator bugs.
Recommendations from mentor
(Последний элемент хвоста должен быть удален после перемещения.)(Длина змеи должна увеличиваться на
единицу если была съедена мышь.)
(Необходимо вызвать метод eatMouse у статического объекта game класса Room, если координаты
мыши совпадают с координатами головы змеи.)
- (18) /* 2%, 1, 1.02, 5827 */ (finished)
