taskKey="com.javarush.games.minesweeper.part03"\n\nИгра сапер (3/16)

Так как в нашей игре будут использоваться игровые объекты (ячейки), создадим для их описания
отдельный класс GameObject. Давай подумаем, какие параметры должны быть у игрового объекта? Конечно же, это
координаты его размещения на игровом поле, x и y. Ну и куда же без конструктора? После того, как все сделаешь,
не забудь запустить программу и посмотреть на результат.


Требования:
1.	Должен существовать публичный класс GameObject.
2.	В классе GameObject должно существовать публичное поле x типа int.
3.	В классе GameObject должно существовать публичное поле y типа int.
4.	В классе GameObject должен существовать один конструктор с двумя параметрами типа int, который устанавливает соответствующие значения полям x и y в указанном порядке.


Игра сапер (2/16)

Наше игровое поле какое-то маленькое, тебе не кажется? Нам нужно игровое поле размером 9х9 ячеек.
Для указания размерности в движке существует метод setScreenSize(int, int), который принимает параметрами
ширину и высоту (количество ячеек по ширине и высоте). Поскольку поле квадратное, размерность
удобно вынести в отдельную приватную переменную-константу SIDE. Точкой входа в наш игровой движок
является метод initialize(). Поэтому переопредели его в классе MinesweeperGame, и в этом методе вызови метод
setScreenSize с аргументами SIDE и SIDE.
Обязательно проверь результат своей работы — запусти программу.



Игра сапер (1/16)

Давай напишем увлекательную игру "Сапер".
Правила игры:
1.  Игровое поле разделено на смежные ячейки (квадраты), некоторые из которых «заминированы».
2.  Цель игры — разминировать поле, то есть открыть все ячейки без мин.
3.  Если открыта ячейка с миной, игра считается проигранной. Мины расставляются в случайном порядке.
4.  Если под открытой ячейкой мины нет, в ней появляется число, показывающее, сколько соседствующих с открытой
ячейкой "заминировано". Используя эти числа, можно рассчитать расположение мин.
5.  Если под соседними ячейками тоже нет мин, открывается некоторая "незаминированная" область до ячеек,
в которых есть цифры.
6.  "Заминированные" ячейки можно помечать флагом, чтобы случайно не открыть их. Количество флагов равно
количеству мин на игровом поле.
7.  Если все "незаминированные" ячейки открыты, игра считается выигранной.

Теперь приступаем к реализации игры:
Для начала создадим класс игры MinesweeperGame, который будет реализовывать логику игры. Данный класс должен
быть унаследован от класса Game, который является частью крутого "игрового движка" JavaRush.
Этот и другие классы "движка" находятся в пакете com.javarush.engine.cell, и чтобы ими пользоваться,
класс MinesweeperGame должен содержать такой импорт:
import com.javarush.engine.cell.*;
Если ты все сделал правильно, после запуска приложения увидишь игровое поле.



