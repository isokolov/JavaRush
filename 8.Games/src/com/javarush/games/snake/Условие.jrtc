taskKey="com.javarush.games.snake.part03"\n\nИгра змейка (3/20)

Для хранения объектов игрового поля нам понадобится дополнительный класс.
Объект этого класса будет хранить координаты соответствующей ячейки.
Назовем его GameObject.


Требования:
1.	Должен существовать публичный класс GameObject.
2.	В классе GameObject должно существовать публичное поле x типа int.
3.	В классе GameObject должно существовать публичное поле y типа int.
4.	В классе GameObject должен существовать один конструктор с двумя параметрами типа int, который устанавливает соответствующие значения полям x и y.


Игра змейка (2/20)

Мы готовы создать игру. Чтобы выполнить это действие, будем использовать отдельный метод — createGame().
Он будет содержать команды, которые выполняются при запуске игры.
Чтобы отрисовать игровое поле, создай метод drawScene().

Метод initialize() будет вызывать createGame(). Метод createGame() будет вызывать drawScene(). А метод drawScene() пока будет раскрашивать игровой экран.



Игра змейка (1/20)

Давай напишем игру "Змейка".
Правила игры:
1.  Игрок управляет движением змейки, которая ползает по квадратному полю: вверх, вниз, вправо и влево.
Остановить движение змейки нельзя.
2.  Цель игры — съесть как можно большее количество яблок, которые появляются поочередно, в случайном месте
игрового поля, как только змейка "проглотит" предыдущее.
3.  С каждым новым яблоком змейка растет на один сегмент (занимает на одну ячейку больше). 3. В нашей игре
на старте змейка занимает три ячейки (имеет три сегмента) и может дорасти до 28.
4.  По мере того, как растет змейка, скорость игры увеличивается.
5.  Змейка не может проходить "сквозь себя" или выходить за пределы игрового поля.
5.  Игра оканчивается победой, если длина змейки увеличилась до 28 сегментов.
6.  Игра оканчивается проигрышем, если касается сама себя или края поля.
Теперь приступаем к реализации игры:
Нам понадобится класс, который будет содержать логику игры. Назовем его SnakeGame. Не забудь унаследовать
его от класса Game. Этот и другие классы "движка" находятся в пакете com.javarush.engine.cell,
и чтобы ими пользоваться, класс SnakeGame должен содержать такой импорт:
import com.javarush.engine.cell.*;
Если ты все сделал правильно, уже можно запустить SnakeGame и увидеть пустое игровое поле.
Создай переменные для хранения ширины и высоты игрового поля.
Переопредели метод родительского класса public void initialize(): он будет содержать команды, которые
выполнятся один раз при запуске игры. Например, установка размеров игрового поля.



